- hosts: database
  become: yes
  become_user: ubuntu
  tasks:
    - name: get ip of database from hosts
      shell: hostname -i | awk '{print $1}'
      register: theHivedatabase

- hosts: localhost  
  connection: local 
  become: yes  
  become_user: ubuntu 
  tasks: 
    - name: get ip of worker2 from hosts   
      shell: grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' hosts | awk 'FNR == 3 {print}'
      register: workertwo  
    - name: Check if already copied host to application.properties 
      become: yes
      become_user: root
      shell: if grep -q {{ hostvars['database']['theHivedatabase'].stdout }}  application.properties; then     echo true; else     echo false; fi 
      register: check
    - name: Copy host to application.properties (Database)
      become: yes
      become_user: root
      replace: 
        path: "application.properties"
        regexp: 'uri = "http://"'  
        replace: "uri = http://{{hostvars['database']['theHivedatabase'].stdout}}:9200"
      when: check.stdout == 'false'
    - name: Check if already copied host to application.properties (MISP)
      become: yes
      become_user: root
      shell: if grep -q   {{workertwo.stdout}} application.properties; then     echo true; else     echo false; fi
      register: checktwo
    - name: Copy host to application.properties 
      become: yes
      become_user: root
      replace: 
        path: "application.properties"
        regexp: 'url = "http://"'
        replace: 'url = "http://{{ workertwo.stdout }}"'
      when: checktwo.stdout == 'false' 
    - name: Check if already copied host to theHiveSetup3.yml
      become: yes
      become_user: root
      shell: if grep -q {{ hostvars['database']['theHivedatabase'].stdout }} theHiveSetup3.yml; then     echo true; else     echo false; fi
      register: checkthree
    - name: copy host to theHiveSetup3.yml
      become: yes
      become_user: root
      replace:
        path: "theHiveSetup3.yml"
        regexp:  '- http://'
        replace: "- http://{{ hostvars['database']['theHivedatabase'].stdout }}:9200"
      when: checkthree.stdout == "false"
- hosts: worker2
  become: yes
  become_user: root
  tasks: 
    - name: Check if host is already defined correctly
      lineinfile:
        state: absent
        path: "/etc/hosts"
        regexp: "^worker2"
      check_mode: true
      changed_when: false
      register: check
    - name: Define host if undefined
      lineinfile:
        state: present
        path: "/etc/hosts"
        regexp: '^127.0.0.1 '
        insertafter: '^#127.0.0.1 '
        line: '127.0.0.1 worker2 localhost'
      when: check.found == 0   
- hosts: master
  become: yes
  become_user: ubuntu
  tasks:
    - name: copy application.properties to master
      copy: 
        src: application.properties
        dest: application.properties
    - name: copy theHiveSetup3.yml to master
      copy: 
        src: theHiveSetup3.yml
        dest: theHiveSetup3.yml
    - name: check if configmap already exists
      become: yes
      become_user: ubuntu
      shell: kubectl get configmap | grep app-conf && echo "true" || echo "false"
      register: result
    - name: create config map for application.properties (theHive)
      become: yes
      become_user: ubuntu
      shell: kubectl create configmap app-conf --from-file application.properties
      when: result.stdout == 'false'
    - name: Label Worker2
      become: yes
      become_user: ubuntu
      shell: kubectl label nodes worker2 disktype=ssd --overwrite=true
    - name: Setting up theHive
      become: yes
      become_user: ubuntu
      shell: kubectl apply -f theHiveSetup3.yml 

